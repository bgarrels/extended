USE DEMO


/************** Création des TABLES **************/

CREATE TABLE ARTICLE (
	ARTI_Clep varchar (12) NOT NULL ,
	ARTI_Libelle varchar (120) NOT NULL ,
	ARTI__CARA varchar (20) NULL ,
	ARTI__TYPR varchar (12) NULL ,
	ARTI__GAMM varchar (5) NULL 
);

CREATE TABLE CARACTERISTIQUE (
	CARA_Clep varchar (20) NOT NULL ,
	CARA_Libelle varchar (150) NULL 
);

CREATE TABLE CATEGORIE (
	CATE_Clep int NOT NULL ,
	CATE_Lib varchar (20) NULL ,
	CATE_Valide bit NULL 
);

CREATE TABLE GAMME (
	GAMM_Clep varchar (5) NOT NULL ,
	GAMM_Libelle varchar (100) NULL 
);

CREATE TABLE GAMME_TYPR (
	GATY__GAMM varchar (5) NOT NULL ,
	GATY__TYPR varchar (12) NOT NULL 
);
CREATE TABLE TYPE_PRODUIT (
	TYPR_Clep varchar (12) NOT NULL ,
	TYPR_Libelle varchar (120) NULL 
);

CREATE TABLE TYPE_PRODUIT_CARA (
	TYPC__TYPR varchar (12) NOT NULL ,
	TYPC__CARA varchar (20) NOT NULL 
);



/************** Ajout des clés primaires **************/

ALTER TABLE ARTICLE ADD PRIMARY KEY  
	(
		ARTI_Clep
	);

ALTER TABLE CARACTERISTIQUE PRIMARY KEY  
	(
		CARA_Clep
	);

ALTER TABLE CATEGORIE PRIMARY KEY  
	(
		CATE_Clep
	);

ALTER TABLE GAMME PRIMARY KEY  
	(
		GAMM_Clep
	);

ALTER TABLE GAMME_TYPR PRIMARY KEY  
	(
		GATY__GAMM,
		GATY__TYPR
	);

ALTER TABLE TYPE_PRODUIT PRIMARY KEY  
	(
		TYPR_Clep
	);

ALTER TABLE TYPE_PRODUIT_CARA PRIMARY KEY  
	(
		TYPC__TYPR,
		TYPC__CARA
	);


/************** Ajout des clés étrangères **************/

ALTER TABLE ARTICLE ADD FOREIGN KEY 
	(
		ARTI__CARA
	) REFERENCES CARACTERISTIQUE (
		CARA_Clep
	);
ALTER TABLE ARTICLE ADD FOREIGN KEY 
	(
		ARTI__GAMM
	) REFERENCES GAMME (
		GAMM_Clep
	) ON UPDATE CASCADE;
ALTER TABLE ARTICLE ADD FOREIGN KEY 
	(
		ARTI__TYPR
	) REFERENCES TYPE_PRODUIT (
		TYPR_Clep
	) ON UPDATE CASCADE ;

ALTER TABLE GAMME_TYPR ADD FOREIGN KEY 
	(
		GATY__GAMM
	) REFERENCES GAMME (
		GAMM_Clep
	) ON DELETE CASCADE  ON UPDATE CASCADE;
ALTER TABLE GAMME_TYPR ADD  FOREIGN KEY 
	(
		GATY__TYPR
	) REFERENCES TYPE_PRODUIT (
		TYPR_Clep
	) ON DELETE CASCADE  ON UPDATE CASCADE;

ALTER TABLE TYPE_PRODUIT_CARA ADD  FOREIGN KEY 
	(
		TYPC__CARA
	) REFERENCES CARACTERISTIQUE (
		CARA_Clep
	) ON DELETE CASCADE  ON UPDATE CASCADE ,
ALTER TABLE TYPE_PRODUIT_CARA ADD  FOREIGN KEY 
	(
		TYPC__TYPR
	) REFERENCES TYPE_PRODUIT (
		TYPR_Clep
	) ON DELETE CASCADE  ON UPDATE CASCADE ;

/************** Création des Triggers **************/
/* Les triggers liés aux indicateurs des lots */

CREATE TRIGGER TR_LSOU_CARA FOR CARACTERISTIQUE
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'CARA'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'CARA' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_CATE FOR CATEGORIE
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'CATE'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'CATE' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_GATY FOR GAMME_TYPR
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'GATY'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'GATY' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_GAMM FOR GAMME
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'GAMM'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'GAMM' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_TYPR FOR TYPE_PRODUIT
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'TYPR'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'TYPR' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_TYPC FOR TYPE_PRODUIT_CARA
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'TYPC'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'TYPC' AND LSOU_Indicateur = 0;

CREATE TRIGGER TR_LSOU_ARTI FOR ARTICLE
FOR INSERT, UPDATE, DELETE
AS
DECLARE @indic bit
SELECT @indic = LSOU_Indicateur FROM LOT_SIEGE_OUT WHERE LSOU_Clep = 'ARTI'
IF @indic = 0
UPDATE LOT_SIEGE_OUT
SET LSOU_Indicateur = 1, LSOU_Dernmodif = getdate() WHERE LSOU_Clep = 'ARTI' AND LSOU_Indicateur = 0;

COMMIT;

